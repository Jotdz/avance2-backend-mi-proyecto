/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import javax.swing.DefaultListModel;
import Modelo.Producto;
import Modelo.Combo;
import Modelo.Pedido; 
import Modelo.Factura;
import Controlador.servicioCocina;  
import java.util.ArrayList;
import Datos.pedidoDAO;
import Red.clientePedidos;

/**
 *
 * @author Josué Sánchez
 */
public class pedidoForm extends javax.swing.JFrame {
    
    private Pedido pedidoActual =
        new Pedido(servicioCocina.generarId());

    DefaultListModel<Producto> modeloProductos   = new DefaultListModel<>();
    DefaultListModel<Producto> modeloSeleccionados = new DefaultListModel<>();
    private javax.swing.DefaultComboBoxModel<Modelo.Combo> modeloCombo;
    
    private void cargarCombosIniciales() {
        Modelo.Combo clasico = new Modelo.Combo(100, "Clásico", 4200.0);
        Modelo.Combo doble   = new Modelo.Combo(101, "Doble",   5200.0);

        modeloCombo.addElement(clasico);
        modeloCombo.addElement(doble);
    }
    
    private void salir() {
        Object[] opciones = {"Si", "No"};
        int op = javax.swing.JOptionPane.showOptionDialog(
                this,
                "¿Seguro que desea salir?",
                "Salir",
                javax.swing.JOptionPane.YES_NO_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE,
                null,
                opciones,
                opciones[1] 
        );
        if (op == javax.swing.JOptionPane.YES_OPTION) {
            System.exit(0);
        }
}
    

    /**
     * Creates new form pedidoForm
     */
    public pedidoForm() {
        initComponents();
        
        modeloProductos.addElement(new Producto(1, "Hamburguesa Clásica", 2500, "Individual"));
        modeloProductos.addElement(new Producto(2, "Papas Grandes", 1200, "Individual"));
        modeloProductos.addElement(new Producto(3, "Refresco", 1000, "Bebida"));
        
        
        modeloCombo = new javax.swing.DefaultComboBoxModel<>();
        cbCombo.setModel(modeloCombo);
        cargarCombosIniciales();


        listaProductos.setModel(modeloProductos);
        listaSeleccionados.setModel(modeloSeleccionados);
        
    botonAgregar.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            Producto seleccionado = listaProductos.getSelectedValue();
            if (seleccionado != null) {
                modeloSeleccionados.addElement(seleccionado);
                pedidoActual.agregarProducto(seleccionado); 
                actualizarTotal();
            }
        }
    });

    botonEliminar.addActionListener(new java.awt.event.ActionListener() {
        @Override
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            Producto seleccionado = listaSeleccionados.getSelectedValue();
            if (seleccionado != null) {
                modeloSeleccionados.removeElement(seleccionado);
                pedidoActual.eliminarProducto(seleccionado);  
                actualizarTotal();
            }
        }
    });
        
    }
    
    private void actualizarTotal() {
        double total = 0;
        for (int i = 0; i < modeloSeleccionados.size(); i++) {
            total += modeloSeleccionados.get(i).getPrecio();
        }
        jlabelTotal.setText("Total: \u20A1" + total);
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        botonAgregar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        jlabelTotal = new javax.swing.JLabel();
        botonEnviar = new javax.swing.JButton();
        jlabelDisponibles = new javax.swing.JLabel();
        jlabelSeleccionados = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaProductos = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaSeleccionados = new javax.swing.JList<>();
        lblCombo = new javax.swing.JLabel();
        cbCombo = new javax.swing.JComboBox<>();
        btnAgregarCombo = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        Cocina = new javax.swing.JMenu();
        abrirMonitor = new javax.swing.JMenuItem();
        generarFactura = new javax.swing.JMenuItem();
        Salir = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonAgregar.setText("Agregar");

        botonEliminar.setText("Eliminar");

        jlabelTotal.setText("Total");

        botonEnviar.setText("Enviar a cocina");
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });

        jlabelDisponibles.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jlabelDisponibles.setText("Disponibles");

        jlabelSeleccionados.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jlabelSeleccionados.setText("Seleccionados");

        jScrollPane1.setViewportView(listaProductos);

        jScrollPane2.setViewportView(listaSeleccionados);

        lblCombo.setText("Combo");

        btnAgregarCombo.setText("Agregar Combo");
        btnAgregarCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarComboActionPerformed(evt);
            }
        });

        Cocina.setText("Opciones");
        Cocina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CocinaActionPerformed(evt);
            }
        });

        abrirMonitor.setText("Monitor");
        abrirMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirMonitorActionPerformed(evt);
            }
        });
        Cocina.add(abrirMonitor);

        generarFactura.setText("Facturar");
        generarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarFacturaActionPerformed(evt);
            }
        });
        Cocina.add(generarFactura);

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });
        Cocina.add(Salir);

        menuBar.add(Cocina);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(botonAgregar)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlabelDisponibles, javax.swing.GroupLayout.Alignment.CENTER))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlabelSeleccionados)
                                .addGap(63, 63, 63))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(botonEnviar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblCombo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAgregarCombo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCombo)
                    .addComponent(cbCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarCombo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabelDisponibles)
                    .addComponent(jlabelSeleccionados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlabelTotal)
                        .addComponent(botonEliminar))
                    .addComponent(botonAgregar))
                .addGap(18, 18, 18)
                .addComponent(botonEnviar)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CocinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CocinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CocinaActionPerformed

    private void abrirMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirMonitorActionPerformed
        // TODO add your handling code here:
        
        new Vista.cocinaForm().setVisible(true);
        
    }//GEN-LAST:event_abrirMonitorActionPerformed

    private void generarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarFacturaActionPerformed
        // TODO add your handling code here:
        
        try {
            pedidoActual.getProductos().clear();
            for (int i = 0; i < modeloSeleccionados.getSize(); i++) {
                Modelo.Producto p = modeloSeleccionados.get(i);
                pedidoActual.agregarProducto(p);
            }

            if (pedidoActual.getProductos().isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "El pedido está vacío.");
                return;
            }

            Factura f = new Factura(Controlador.servicioCocina.generarId(), pedidoActual);
            java.io.File archivo = f.imprimirFactura();

            javax.swing.JOptionPane.showMessageDialog(
                this,
                "Factura generada:\n" + archivo.getAbsolutePath()
            );
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al facturar: " + ex.getMessage());
        } 
    }//GEN-LAST:event_generarFacturaActionPerformed

    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
        // TODO add your handling code here:
        
        pedidoActual.getProductos().clear();
        for (int i = 0; i < modeloSeleccionados.getSize(); i++) {
            Modelo.Producto p = modeloSeleccionados.get(i);
            pedidoActual.agregarProducto(p);
        }

        if (pedidoActual.getProductos().isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Agregue productos antes de enviar.");
            return;
        }

        double total = 0.0;
        for (int i = 0; i < modeloSeleccionados.size(); i++) {
            total += modeloSeleccionados.get(i).getPrecio();
        }

        int idGenerado = new Datos.pedidoDAO().crear("MOSTRADOR", total);

        if (idGenerado <= 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "No se pudo guardar el pedido en la base de datos.");
            return;
        }

        String resumen = "Pedido#" + idGenerado
                + " | items=" + pedidoActual.getProductos().size()
                + " | total=" + total;
        String respuestaServidor = Red.clientePedidos.enviarResumen("127.0.0.1", 5000, resumen);

        pedidoActual.setEstado("pendiente");
        Controlador.servicioCocina.agregar(pedidoActual);

        javax.swing.JOptionPane.showMessageDialog(
            this,
            "Pedido guardado (ID " + idGenerado + ") y enviado a cocina.\n"
            + "Mensajería al servidor: " + respuestaServidor
            + "\nQueda como -pendiente- en el monitor."
        );

        pedidoActual = new Modelo.Pedido(Controlador.servicioCocina.generarId());
        modeloSeleccionados.clear();
        actualizarTotal();
        
    }//GEN-LAST:event_botonEnviarActionPerformed

    private void btnAgregarComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarComboActionPerformed
        // TODO add your handling code here:
        
        Modelo.Combo c = (Modelo.Combo) cbCombo.getSelectedItem();
        if (c == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un combo.");
            return;
        }

        pedidoActual.agregarProducto(c);
        modeloSeleccionados.addElement(c);
        actualizarTotal(); 
        
    }//GEN-LAST:event_btnAgregarComboActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
        
        salir();
        
    }//GEN-LAST:event_SalirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pedidoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pedidoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pedidoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pedidoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new pedidoForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Cocina;
    private javax.swing.JMenuItem Salir;
    private javax.swing.JMenuItem abrirMonitor;
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonEnviar;
    private javax.swing.JButton btnAgregarCombo;
    private javax.swing.JComboBox<Modelo.Combo> cbCombo;
    private javax.swing.JMenuItem generarFactura;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlabelDisponibles;
    private javax.swing.JLabel jlabelSeleccionados;
    private javax.swing.JLabel jlabelTotal;
    private javax.swing.JLabel lblCombo;
    private javax.swing.JList<Modelo.Producto> listaProductos;
    private javax.swing.JList<Modelo.Producto> listaSeleccionados;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables
}
